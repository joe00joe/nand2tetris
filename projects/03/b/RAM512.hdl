// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load, sel=address[6..8], a=in1, b=in2, c=in3, d=in4, e=in5, f=in6, g=in7, h=in8);
	RAM64(in[0..15]=in, load=in1, address=address[0..5], out[0..15]=o1);
	RAM64(in[0..15]=in, load=in2, address=address[0..5], out[0..15]=o2);
	RAM64(in[0..15]=in, load=in3, address=address[0..5], out[0..15]=o3);
	RAM64(in[0..15]=in, load=in4, address=address[0..5], out[0..15]=o4);
	RAM64(in[0..15]=in, load=in5, address=address[0..5], out[0..15]=o5);
	RAM64(in[0..15]=in, load=in6, address=address[0..5], out[0..15]=o6);
	RAM64(in[0..15]=in, load=in7, address=address[0..5], out[0..15]=o7);
	RAM64(in[0..15]=in, load=in8, address=address[0..5], out[0..15]=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address[6..8], out=out);
}