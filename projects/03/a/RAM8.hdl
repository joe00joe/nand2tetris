// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel[0..2]=address, a=in1, b=in2, c=in3, d=in4, e=in5, f=in6, g=in7, h=in8);
	Register(in[0..15]=in, load=in1, out[0..15]=o1);
	Register(in[0..15]=in, load=in2, out[0..15]=o2);
	Register(in[0..15]=in, load=in3, out[0..15]=o3);
	Register(in[0..15]=in, load=in4, out[0..15]=o4);
	Register(in[0..15]=in, load=in5, out[0..15]=o5);
	Register(in[0..15]=in, load=in6, out[0..15]=o6);
	Register(in[0..15]=in, load=in7, out[0..15]=o7);
	Register(in[0..15]=in, load=in8, out[0..15]=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address, out=out);
	
     	
}